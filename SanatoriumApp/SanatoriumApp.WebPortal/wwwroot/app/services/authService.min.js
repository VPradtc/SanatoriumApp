"use strict";function AuthService(n,t,i,r){var o=i.serverApiUri,f=i.apiTokenUrl,u={},e=function(){u.authentication={isAuthorized:!1,token:"",role:"",id:""}};return e(),u.login=function(e){var s="grant_type=password&userName="+e.email+"&password="+e.password,o;return s=s+"&client_id="+i.clientId,o=t.defer(),n.post(f,s,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(n){r.authorizationData={id:n.id,firstName:n.firstName,lastName:n.lastName,token:n.access_token,role:parseInt(n.role),refreshToken:n.refresh_token,useRefreshTokens:!0,isAuthorized:!0};u.loadAuthenticationData();o.resolve(n)}).error(function(n){o.reject(n)}),o.promise},u.checkRole=function(n){for(var i=!1,t=0;t<n.length;++t)if(u.authentication.role===n[t]){i=!0;break}return i},u.logout=function(){var n=t.defer();return u.clearAuthenticationData(),n.resolve(!0),n.promise},u.loadAuthenticationData=function(){var n=r.authorizationData;return n&&(u.authentication.id=n.id,u.authentication.firstName=n.firstName,u.authentication.lastName=n.lastName,u.authentication.isAuthorized=n.isAuthorized,u.authentication.token=n.token,u.authentication.role=n.role,u.authentication.useRefreshTokens=n.useRefreshTokens),u.authentication},u.clearAuthenticationData=function(){r.$reset();e()},u.refreshToken=function(){var e=t.defer(),o=r.authorizationData,s;return o&&o.useRefreshTokens?(s="grant_type=refresh_token&refresh_token="+o.refreshToken+"&client_id="+i.clientId,n.post(f,s,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(n){r.authorizationData={id:n.id,firstName:n.firstName,lastName:n.lastName,token:n.access_token,role:JSON.parse(n.role),refreshToken:n.refresh_token,useRefreshTokens:!0,isAuthorized:!0};u.loadAuthenticationData();e.resolve(n)}).error(function(n){u.clearAuthenticationData();u.logout();e.reject(n)})):e.reject(),e.promise},u}angular.module("DataAccessApp").service("authService",["$http","promiseFactory","ngUrlSettings","$localStorage",AuthService]);
//# sourceMappingURL=authService.min.js.map
